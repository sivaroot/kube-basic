apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-nginx
  namespace: kube-basic
spec:
  selector:
    matchLabels:
      app: app-nginx
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: app-nginx
    spec:
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
      containers:
      - name: app-nginx
        image: nginx:alpine
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/nginx.conf
            subPath: nginx.conf
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            cpu: 50m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort:  80
          name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  sample-web
  namespace: kube-basic
  labels:
    app:  sample-web
spec:
  selector:
    matchLabels:
      app: sample-web
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  sample-web
    spec:
      containers:
      - name:  sample-web
        image:  yeasy/simple-web
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            cpu: 50m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort:  80
          name:  sample-web